{"version":3,"sources":["audio/LinnHat_C.wav","audio/LinnHat_O.wav","components/Sound.js","components/KeyboardShortcuts.js","elements/Div.js","components/KeyboardShortcutsLegend.js","elements/Button.js","elements/Icon.js","components/KeyboardShortcutsButton.js","elements/H1.js","components/Header.js","components/PlayStopButton.js","elements/Form.js","elements/Input.js","components/TempoInputAndButtons.js","components/TempoSlider.js","tap-tempo-logic.js","elements/SquareResponsiveDiv.js","components/TapTempoButton.js","components/TimeSigBeatsControls.js","components/TimeSigBeatNoteLengthControls.js","components/TimeSigControls.js","components/VolumeControl.js","components/AccentToggleButton.js","styles.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sound","prepareAudioComponents","_this","gain","Tone","Gain","props","volume","toMaster","chh","Player","closedHat","connect","ohh","openHat","updateLoop","loop","callback","time","accent","currentBeat","start","concat","timeSigBeatNoteLength","incrementCurrentBeat","interval","this","Transport","bpm","value","tempo","Loop","prevProps","playing","context","ready","toggle","Component","blur","document","activeElement","KeyboardShortcuts","onKeydown","code","togglePlaying","tempoInputRef","current","focus","incrementTempo","tapTempoButtonRef","onTapTempoButtonMouseDown","incrementVolume","timeSigBeatsInputRef","toggleAccent","incrementTimeSigBeats","_this2","window","addEventListener","e","keyCode","_this3","removeEventListener","Div","styled","div","_templateObject","position","top","right","bottom","left","width","height","minWidth","minHeight","zIndex","margin","marginTop","padding","display","flexDirection","justifyContent","alignItems","textAlign","verticalAlign","fontSize","fontWeight","color","theme","fg","background","border","opacity","transition","overflow","KeyboardShortcutsLegend","legend","action","key","onContainerDivClick","displayShortcuts","toggleDisplayShortcuts","legendJSX","map","obj","index","react_default","a","createElement","elements_Div","onClick","Button","button","attrs","type","Button_templateObject","flex","lineHeight","bg","borderColor","borderWidth","borderRadius","outline","transform","cursor","scaleOnActive","Icon","className","children","Icon_templateObject","KeyboardShortcutsButton","onKeyboardShortcutsButtonClick","elements_Button","elements_Icon","undefined","H1","h1","H1_templateObject","letterSpacing","Header","elements_H1","PlayStopButton","onPlayStopButtonClick","Form","form","Form_templateObject","Input","input","Input_templateObject","maxWidth","TempoInputAndButtons","onTempoInputFormSubmit","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","setTempo","tempoInput","stop","onTempoInputChange","setTempoInput","currentTarget","replace","slice","onTempoInputFocus","onTempoInputBlur","String","onIncrementTempoButtonClick","elements_Form","onSubmit","elements_Input","ref","onChange","onFocus","onBlur","TempoSlider","onTempoSliderChange","min","MIN_TEMPO","max","MAX_TEMPO","step","tapChain","tapIndex","lastTapMS","lastTapSkipped","currentBeatMS","processTap","ms","Date","getTime","newTapChainShouldBegin","int","length","reduce","total","SquareDiv","SquareResponsiveDiv_templateObject","SquareImg","img","src","alt","_templateObject2","ResponsiveSquareDiv","TapTempoButton","SquareResponsiveDiv","onMouseDown","TimeSigBeatsControls","onTimeSigBeatsInputFormSubmit","setTimeSigBeats","timeSigBeatsInput","onTimeSigBeatsInputChange","setTimeSigBeatsInput","onTimeSigBeatsInputFocus","onTimeSigBeatsInputBlur","timeSigBeats","onIncrementTimeSigBeatsButtonClick","TimeSigBeatNoteLengthButton","TimeSigBeatNoteLengthControls_templateObject","isSelected","TimeSigBeatNoteLengthControls","onTimeSigBeatNoteLengthButtonClick","setTimeSigBeatNoteLength","buttons","item","TimeSigControls","components_TimeSigBeatsControls","MIN_TIME_SIG_BEATS","MAX_TIME_SIG_BEATS","components_TimeSigBeatNoteLengthControls","VolumeControl","onVolumeInputChange","setVolume","Number","react","AccentToggleButton","onAccentToggleButtonClick","Theme","GlobalStyles","createGlobalStyle","styles_templateObject","legalTempoValue","num","legalTimeSigBeatsValue","legalVolumeValue","App","state","React","createRef","setState","prevState","Object","objectSpread","newTempo","parseInt","incr","newTimeSigBeats","newTimeSigBeatNoteLength","Math","round","styled_components_browser_esm","components_Sound","components_KeyboardShortcuts","components_KeyboardShortcutsLegend","components_KeyboardShortcutsButton","components_Header","components_PlayStopButton","components_TempoInputAndButtons","components_TempoSlider","components_TapTempoButton","heigh","components_TimeSigControls","components_VolumeControl","components_AccentToggleButton","Boolean","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c8dbf5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LinnHat_C.07edaf03.wav\";","module.exports = __webpack_public_path__ + \"static/media/LinnHat_O.d33bafd3.wav\";","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tone from 'tone';\r\nimport closedHat from '../audio/LinnHat_C.wav';\r\nimport openHat from '../audio/LinnHat_O.wav';\r\n\r\nclass Sound extends Component {\r\n  prepareAudioComponents = () => {\r\n    this.gain = new Tone.Gain(this.props.volume).toMaster();\r\n    this.chh = new Tone.Player(closedHat).connect(this.gain);\r\n    this.ohh = new Tone.Player(openHat).connect(this.gain);\r\n  };\r\n\r\n  updateLoop = () => {\r\n    this.loop.callback = time => {\r\n      this[this.props.accent && !this.props.currentBeat ? 'ohh' : 'chh'].start(\r\n        time,\r\n        0,\r\n        `${this.props.timeSigBeatNoteLength}n`\r\n      );\r\n      this.props.incrementCurrentBeat();\r\n    };\r\n    this.loop.interval = `${this.props.timeSigBeatNoteLength}n`;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.prepareAudioComponents();\r\n    Tone.Transport.bpm.value = this.props.tempo;\r\n    this.loop = new Tone.Loop().start(0);\r\n    this.updateLoop();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.tempo !== this.props.tempo)\r\n      Tone.Transport.bpm.value = this.props.tempo;\r\n\r\n    if (prevProps.playing !== this.props.playing)\r\n      Tone.context.ready(Tone.Transport.toggle());\r\n\r\n    if (prevProps.volume !== this.props.volume)\r\n      this.gain.gain.value = this.props.volume;\r\n\r\n    if (prevProps.timeSigBeatNoteLength !== this.props.timeSigBeatNoteLength)\r\n      this.updateLoop();\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nSound.propTypes = {\r\n  tempo: PropTypes.number.isRequired,\r\n  playing: PropTypes.bool.isRequired,\r\n  volume: PropTypes.number.isRequired,\r\n  currentBeat: PropTypes.number.isRequired,\r\n  accent: PropTypes.bool.isRequired,\r\n  timeSigBeats: PropTypes.number.isRequired,\r\n  timeSigBeatNoteLength: PropTypes.string.isRequired,\r\n  incrementCurrentBeat: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Sound;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst blur = () => document.activeElement.blur();\r\n\r\n// the or operator (||) is used to call two functions on one line\r\nclass KeyboardShortcuts extends Component {\r\n  onKeydown = code =>\r\n    code === 32 // space\r\n      ? this.props.togglePlaying() || blur()\r\n      : code === 84 // t\r\n      ? this.props.tempoInputRef.current.focus()\r\n      : code === 37 // arrow left\r\n      ? this.props.incrementTempo(-1) || blur()\r\n      : code === 39 // arrow right\r\n      ? this.props.incrementTempo(1) || blur()\r\n      : code === 77 // m\r\n      ? this.props.tapTempoButtonRef.current.onTapTempoButtonMouseDown() ||\r\n        blur()\r\n      : code === 40 // arrow down\r\n      ? this.props.incrementVolume(-0.1) || blur()\r\n      : code === 38 // arrow up\r\n      ? this.props.incrementVolume(0.1) || blur()\r\n      : code === 66 // b\r\n      ? this.props.timeSigBeatsInputRef.current.focus()\r\n      : code === 65 // a\r\n      ? this.props.toggleAccent() || blur()\r\n      : code === 90 // z\r\n      ? this.props.incrementTimeSigBeats(-1) || blur()\r\n      : code === 88 // x\r\n      ? this.props.incrementTimeSigBeats(1) || blur()\r\n      : null;\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', e => this.onKeydown(e.keyCode));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', e => this.onKeydown(e.keyCode));\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nKeyboardShortcuts.propTypes = {\r\n  togglePlaying: PropTypes.func.isRequired,\r\n  incrementTempo: PropTypes.func.isRequired,\r\n  incrementVolume: PropTypes.func.isRequired,\r\n  toggleAccent: PropTypes.func.isRequired,\r\n  incrementTimeSigBeats: PropTypes.func.isRequired,\r\n  tempoInputRef: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }).isRequired,\r\n  timeSigBeatsInputRef: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }).isRequired,\r\n  tapTempoButtonRef: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }).isRequired\r\n};\r\n\r\nexport default KeyboardShortcuts;\r\n","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  ${props => props.position && `position: ${props.position};`}\r\n  ${props => props.top && `top: ${props.top};`}\r\n  ${props => props.right && `right: ${props.right};`}\r\n  ${props => props.bottom && `bottom: ${props.bottom};`}\r\n  ${props => props.left && `left: ${props.left};`}\r\n  ${props => props.width && `width: ${props.width};`}\r\n  ${props => props.height && `height: ${props.height};`}\r\n  ${props => props.minWidth && `min-width: ${props.minWidth};`}\r\n  ${props => props.minHeight && `min-height: ${props.minHeight};`}\r\n  ${props => props.zIndex && `z-index: ${props.zIndex};`}\r\n  ${props => props.margin && `margin: ${props.margin};`}\r\n  ${props => props.marginTop && `margin-top: ${props.marginTop};`}\r\n  ${props => props.padding && `padding: ${props.padding};`}\r\n  ${props => props.display && `display: ${props.display};`}\r\n  ${props => props.flexDirection && `flex-direction: ${props.flexDirection};`}\r\n  ${props =>\r\n    props.justifyContent && `justify-content: ${props.justifyContent};`}\r\n  ${props => props.alignItems && `align-items: ${props.alignItems};`}\r\n  ${props => props.textAlign && `text-align: ${props.textAlign};`}\r\n  ${props => props.verticalAlign && `vertical-align: ${props.verticalAlign};`}\r\n  ${props => props.fontSize && `font-size: ${props.fontSize};`}\r\n  ${props => props.fontWeight && `font-weight: ${props.fontWeight};`}\r\n  color: ${props => props.color || props.theme.fg || 'black'};\r\n  ${props => props.background && `background: ${props.background};`}\r\n  ${props => props.border && `border: ${props.border};`}\r\n  ${props => props.opacity && `opacity: ${props.opacity};`}\r\n  ${props => props.transition && `transition: ${props.transition};`}\r\n  ${props => props.overflow && `overflow: ${props.overflow};`}\r\n`;\r\n\r\nexport default Div;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Div from '../elements/Div';\r\n\r\nclass KeyboardShortcutsLegend extends Component {\r\n  legend = [\r\n    { action: 'Toggle Playback', key: 'Space' },\r\n    { action: 'Tempo Up', key: 'Arrow Right' },\r\n    { action: 'Tempo Down', key: 'Arrow Left' },\r\n    { action: 'Volume Up', key: 'Arrow Up' },\r\n    { action: 'Volume Down', key: 'Arrow Down' },\r\n    { action: 'Focus Tempo Input', key: 'T' },\r\n    { action: 'Tap Tempo', key: 'M' },\r\n    { action: 'Toggle Accent', key: 'A' },\r\n    { action: 'Accent Beat Up', key: 'X' },\r\n    { action: 'Accent Beat Down', key: 'Z' },\r\n    { action: 'Focus Accent Beat Input', key: 'B' }\r\n  ];\r\n\r\n  onContainerDivClick = () =>\r\n    this.props.displayShortcuts && this.props.toggleDisplayShortcuts();\r\n\r\n  render() {\r\n    const legendJSX = this.legend.map((obj, index) => (\r\n      <Div key={index} margin=\"1rem 0\">\r\n        <Div color=\"#ffffff\" fontSize=\"1.25rem\" fontWeight=\"700\">\r\n          {obj.action}\r\n        </Div>\r\n        <Div color=\"#ffffff\" fontSize=\"1.5rem\">\r\n          {obj.key}\r\n        </Div>\r\n      </Div>\r\n    ));\r\n\r\n    return this.props.displayShortcuts ? (\r\n      <Div\r\n        onClick={this.onContainerDivClick}\r\n        position=\"fixed\"\r\n        top=\"0\"\r\n        right=\"0\"\r\n        bottom=\"0\"\r\n        left=\"0\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        padding=\"4rem 0\"\r\n        background=\"rgba(0, 0, 0, 80%)\"\r\n        textAlign=\"center\"\r\n        transition=\"color 5s\"\r\n        zIndex=\"9\"\r\n        overflow=\"auto\"\r\n      >\r\n        {legendJSX}\r\n      </Div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nKeyboardShortcutsLegend.propTypes = {\r\n  displayShortcuts: PropTypes.bool.isRequired,\r\n  toggleDisplayShortcuts: PropTypes.func.isRequired\r\n};\r\n\r\nexport default KeyboardShortcutsLegend;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button.attrs(props => ({\r\n  type: props.type || 'button'\r\n}))`\r\n  ${props => props.position && `position: ${props.position};`}\r\n  ${props => props.top && `top: ${props.top};`}\r\n  ${props => props.right && `right: ${props.right};`}\r\n  ${props => props.bottom && `bottom: ${props.bottom};`}\r\n  ${props => props.left && `left: ${props.left};`}\r\n  ${props => props.right && `right: ${props.right};`}\r\n  ${props => props.zIndex && `z-index: ${props.zIndex};`}\r\n  ${props => props.width && `width: ${props.width};`}\r\n  ${props => props.height && `height: ${props.height};`}\r\n  ${props => props.zIndex && `z-index: ${props.zIndex};`}\r\n  ${props => props.margin && `margin: ${props.margin};`}\r\n  ${props => props.marginTop && `margin-top: ${props.marginTop};`}\r\n  ${props => props.display && `display: ${props.display};`}\r\n  ${props => props.flex && `flex: ${props.flex};`}\r\n  padding: ${props => props.padding && `padding: ${props.padding};`};\r\n  font-size: ${props => props.fontSize || props.theme.fontSize || '1rem'};\r\n  ${props => props.fontWeight && `font-weight: ${props.fontWeight};`}\r\n  ${props => props.lineHeight && `line-height: ${props.lineHeight};`}\r\n  text-align: ${props => props.textAlign || 'center'};\r\n  color: ${props => props.color || props.theme.fg || 'black'};\r\n  background: ${props => props.background || props.theme.bg || 'white'};\r\n  border-color: ${props => props.borderColor || props.theme.fg || 'black'};\r\n  ${props => props.border && `border: ${props.border};`};\r\n  ${props => props.borderWidth && `border-width: ${props.borderWidth};`};\r\n  ${props => props.borderRadius && `border-radius: ${props.borderRadius};`}\r\n  outline: ${props => (props.outline ? props.outline : 'none')};\r\n  ${props => props.opacity && `opacity: ${props.opacity};`}\r\n  backface-visibility: hidden;\r\n  ${props => props.transform && `transform: ${props.transform};`}\r\n  cursor: ${props => props.cursor || 'pointer'};\r\n  transition: all 0.2s;\r\n  ${props =>\r\n    props.scaleOnActive &&\r\n    `\r\n      &:active {\r\n        transform: scale(1.125);\r\n      }`}\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst IconComponent = props => (\r\n  <i className={props.className}>{props.children}</i>\r\n);\r\n\r\nconst Icon = styled(IconComponent)`\r\n${props => props.fontSize && `font-size: ${props.fontSize};`}\r\nfont-weight: ${props => props.fontWeight || '900'};\r\n${props => props.fontWeight && `font-weight: ${props.fontWeight};`}\r\ncolor: ${props => props.color || props.theme.fg || 'black'};\r\n${props => props.opacity && `opacity: ${props.opacity};`}\r\n`;\r\n\r\nexport default Icon;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../elements/Button';\r\nimport Icon from '../elements/Icon';\r\nimport Div from '../elements/Div';\r\n\r\nclass KeyboardShortcutsButton extends Component {\r\n  onKeyboardShortcutsButtonClick = () => this.props.toggleDisplayShortcuts();\r\n\r\n  render() {\r\n    return (\r\n      <Div\r\n        position={this.props.displayShortcuts ? 'fixed' : 'absolute'}\r\n        top=\"10px\"\r\n        right=\"10px\"\r\n        zIndex=\"10\"\r\n      >\r\n        <Button\r\n          onClick={this.onKeyboardShortcutsButtonClick}\r\n          background=\"transparent\"\r\n          border=\"none\"\r\n          transition=\"color 0.2s\"\r\n          scaleOnActive\r\n        >\r\n          <Icon\r\n            className=\"material-icons\"\r\n            fontSize=\"3rem\"\r\n            color={this.props.displayShortcuts ? '#ffffff' : undefined}\r\n          >\r\n            {this.props.displayShortcuts ? 'clear' : 'details'}\r\n          </Icon>\r\n        </Button>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nKeyboardShortcutsButton.propTypes = {\r\n  displayShortcuts: PropTypes.bool.isRequired,\r\n  toggleDisplayShortcuts: PropTypes.func.isRequired\r\n};\r\n\r\nexport default KeyboardShortcutsButton;\r\n","import styled from 'styled-components';\r\n\r\nconst H1 = styled.h1`\r\n  color: ${props => props.theme.fg || 'black'};\r\n  text-align: center;\r\n  font-size: ${props => props.fontSize || '3rem'};\r\n  ${props => props.fontWeight && `font-weight: ${props.fontWeight};`}\r\n  ${props => props.letterSpacing && `letter-spacing: ${props.letterSpacing};`}\r\n  ${props => props.margin && `margin: ${props.margin};`}\r\n  ${props => props.marginTop && `margin-top: ${props.marginTop};`}\r\n`;\r\n\r\nexport default H1;\r\n","import React from 'react';\r\nimport H1 from '../elements/H1';\r\n\r\nconst Header = () => (\r\n  <H1\r\n    fontSize=\"5rem\"\r\n    fontWeight=\"900\"\r\n    letterSpacing=\"-0.425rem\"\r\n    marginTop=\"5rem\"\r\n  >\r\n    metronome\r\n  </H1>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../elements/Button';\r\nimport Icon from '../elements/Icon';\r\nimport Div from '../elements/Div';\r\n\r\nclass PlayStopButton extends Component {\r\n  onPlayStopButtonClick = () => this.props.togglePlaying();\r\n\r\n  render() {\r\n    return (\r\n      <Div display=\"flex\" justifyContent=\"center\" marginTop=\"5rem\">\r\n        <Button\r\n          onClick={this.onPlayStopButtonClick}\r\n          border=\"none\"\r\n          scaleOnActive\r\n        >\r\n          <Icon className=\"material-icons\" fontSize=\"12.5rem\">\r\n            {this.props.playing ? 'stop' : 'play_arrow'}\r\n          </Icon>\r\n        </Button>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayStopButton.propTypes = {\r\n  playing: PropTypes.bool.isRequired,\r\n  togglePlaying: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PlayStopButton;\r\n","import styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  ${props => props.flex && `flex: ${props.flex};`}\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Form;\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled.input.attrs(props => ({\r\n  type: props.type || 'text'\r\n}))`\r\n${props => props.width && `width: ${props.width};`}\r\n${props => props.maxWidth && `max-width: ${props.maxWidth};`}\r\n${props => props.margin && `margin: ${props.margin};`}\r\n${props => props.marginTop && `margin-top: ${props.marginTop};`}\r\n${props => props.display && `display: ${props.display};`}\r\n${props => props.flex && `flex: ${props.flex};`}\r\ncolor: ${props => props.color || props.theme.fg || 'black'};\r\nbackground: ${props => props.background || props.theme.bg || 'white'};\r\nfont-size: ${props => props.fontSize || '1rem'};\r\ntext-align: ${props => props.textAlign || 'center'};\r\n${props => props.border && `border: ${props.border};`};\r\n${props => props.borderWidth && `border-width: ${props.borderWidth};`};\r\noutline: ${props => props.outline || 'none'};\r\njustify-self: center;\r\nalign-self: center;\r\ncursor: ${props => props.cursor || 'pointer'};\r\n`;\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Div from '../elements/Div';\r\nimport Button from '../elements/Button';\r\nimport Form from '../elements/Form';\r\nimport Input from '../elements/Input';\r\nimport Icon from '../elements/Icon';\r\n\r\nclass TempoInputAndButtons extends Component {\r\n  // if the value isn't valid, use closest valid value\r\n  // blur (triggering input value update) after state has been updated\r\n  onTempoInputFormSubmit = async e => {\r\n    e.preventDefault();\r\n    await this.props.setTempo(this.props.tempoInput);\r\n    document.activeElement.blur();\r\n  };\r\n\r\n  // only allows 3 digits to be entered\r\n  onTempoInputChange = e =>\r\n    this.props.setTempoInput(\r\n      e.currentTarget.value.replace(/\\D/g, '').slice(0, 3)\r\n    );\r\n\r\n  onTempoInputFocus = () => this.props.setTempoInput('');\r\n\r\n  // if the input isn't already displaying the current tempo, update input\r\n  onTempoInputBlur = () =>\r\n    String(this.props.tempo) !== this.props.tempoInput &&\r\n    this.props.setTempoInput(String(this.props.tempo));\r\n\r\n  onIncrementTempoButtonClick = e =>\r\n    this.props.incrementTempo(e.currentTarget.value);\r\n\r\n  // if tempo doesn't match the tempoInput, and tempoInput doesn't have focus,\r\n  // set the tempoInput to tempo\r\n  componentDidUpdate() {\r\n    if (\r\n      String(this.props.tempo) !== this.props.tempoInput &&\r\n      document.activeElement !== this.props.tempoInputRef.current\r\n    )\r\n      this.props.setTempoInput(String(this.props.tempo));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Div\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        marginTop=\"5rem\"\r\n      >\r\n        <Button\r\n          value={-1}\r\n          onClick={this.onIncrementTempoButtonClick}\r\n          border=\"none\"\r\n          scaleOnActive\r\n        >\r\n          <Icon className=\"material-icons\" fontSize=\"4rem\" fontWeight=\"900\">\r\n            remove\r\n          </Icon>\r\n        </Button>\r\n\r\n        <Form onSubmit={this.onTempoInputFormSubmit}>\r\n          <Input\r\n            ref={this.props.tempoInputRef}\r\n            value={this.props.tempoInput}\r\n            onChange={this.onTempoInputChange}\r\n            onFocus={this.onTempoInputFocus}\r\n            onBlur={this.onTempoInputBlur}\r\n            width=\"12.5rem\"\r\n            fontSize=\"5rem\"\r\n            border=\"none\"\r\n          />\r\n        </Form>\r\n\r\n        <Button\r\n          value={1}\r\n          onClick={this.onIncrementTempoButtonClick}\r\n          border=\"none\"\r\n          scaleOnActive\r\n        >\r\n          <Icon className=\"material-icons\" fontSize=\"4rem\" fontWeight=\"900\">\r\n            add\r\n          </Icon>\r\n        </Button>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nTempoInputAndButtons.propTypes = {\r\n  tempo: PropTypes.number.isRequired,\r\n  tempoInput: PropTypes.string.isRequired,\r\n  setTempo: PropTypes.func.isRequired,\r\n  setTempoInput: PropTypes.func.isRequired,\r\n  incrementTempo: PropTypes.func.isRequired,\r\n  MIN_TEMPO: PropTypes.number.isRequired,\r\n  MAX_TEMPO: PropTypes.number.isRequired,\r\n  tempoInputRef: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }).isRequired\r\n};\r\n\r\nexport default TempoInputAndButtons;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../elements/Input';\r\n\r\nclass TempoSlider extends Component {\r\n  onTempoSliderChange = e => this.props.setTempo(e.currentTarget.value);\r\n\r\n  render() {\r\n    return (\r\n      <Input\r\n        type=\"range\"\r\n        min={this.props.MIN_TEMPO}\r\n        max={this.props.MAX_TEMPO}\r\n        step={1}\r\n        value={this.props.tempo}\r\n        onChange={this.onTempoSliderChange}\r\n        width=\"100%\"\r\n        marginTop=\"5rem\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nTempoSlider.propTypes = {\r\n  tempo: PropTypes.number.isRequired,\r\n  setTempo: PropTypes.func.isRequired,\r\n  MIN_TEMPO: PropTypes.number.isRequired,\r\n  MAX_TEMPO: PropTypes.number.isRequired\r\n};\r\n\r\nexport default TempoSlider;\r\n","// based on an example by Damien Clarke:\r\n// https://codepen.io/dxinteractive/pen/bpaMMy\r\n\r\nconst TOTAL_TAP_VALUES = 5,\r\n  MS_UNTIL_CHAIN_RESET = 2000,\r\n  SKIPPED_TAP_THRESHOLD_LOW = 1.75,\r\n  SKIPPED_TAP_THRESHOLD_HIGH = 2.75;\r\n\r\nlet tapChain = [],\r\n  tapIndex = 0,\r\n  lastTapMS = null,\r\n  lastTapSkipped = false;\r\n\r\nexport let currentBeatMS = null;\r\n\r\nconst newTapChainShouldBegin = ms => ms > lastTapMS + MS_UNTIL_CHAIN_RESET;\r\n\r\nconst tapHasBeenSkipped = int =>\r\n  tapChain.length > 1 &&\r\n  !lastTapSkipped &&\r\n  int > currentBeatMS * SKIPPED_TAP_THRESHOLD_LOW &&\r\n  int < currentBeatMS * SKIPPED_TAP_THRESHOLD_HIGH;\r\n\r\nconst resetTapChain = () => {\r\n  tapChain = [];\r\n  tapIndex = 0;\r\n  lastTapMS = null;\r\n  lastTapSkipped = null;\r\n  currentBeatMS = null;\r\n};\r\n\r\nconst getAverageTapInterval = () =>\r\n  tapChain.reduce((total, current) => (total += current / tapChain.length), 0);\r\n\r\nexport const processTap = () => {\r\n  // get the current time in milliseconds\r\n  const ms = new Date().getTime();\r\n\r\n  // if the last tap was longer than MS_UNTIL_CHAIN_RESET milliseconds ago:\r\n  // reset all variables\r\n  if (newTapChainShouldBegin(ms)) resetTapChain();\r\n\r\n  // if it's the first tap of a chain, set lastTapMS and skip the rest\r\n  if (!lastTapMS) {\r\n    lastTapMS = ms;\r\n    return;\r\n  }\r\n\r\n  // calculate the tap interval (milliseconds since last tap)\r\n  let interval = ms - lastTapMS;\r\n\r\n  // if a tap was skipped, half the interval\r\n  if (tapHasBeenSkipped(interval)) {\r\n    interval /= 2;\r\n    lastTapSkipped = true;\r\n  } else {\r\n    lastTapSkipped = false;\r\n  }\r\n\r\n  // save the interval in the chain, increment the index, set lastTapMS\r\n  tapChain[tapIndex % TOTAL_TAP_VALUES] = interval;\r\n  tapIndex++;\r\n  lastTapMS = ms;\r\n\r\n  // calculate and store the new average interval\r\n  currentBeatMS = getAverageTapInterval();\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Div from './Div';\r\n\r\nconst SquareDiv = styled(Div)`\r\n  position: relative;\r\n  height: auto;\r\n  width: 40%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst SquareImg = styled.img.attrs(props => ({\r\n  src: 'https://via.placeholder.com/1',\r\n  alt: ''\r\n}))`\r\n  display: block;\r\n  width: 100%;\r\n  height: auto;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ResponsiveSquareDiv = props => (\r\n  <SquareDiv>\r\n    <SquareImg />\r\n    {props.children}\r\n  </SquareDiv>\r\n);\r\n\r\nexport default ResponsiveSquareDiv;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../elements/Button';\r\nimport { processTap, currentBeatMS } from '../tap-tempo-logic';\r\nimport SquareResponsiveDiv from '../elements/SquareResponsiveDiv';\r\n\r\nclass TapTempoButton extends Component {\r\n  onTapTempoButtonMouseDown = () => {\r\n    processTap();\r\n    if (currentBeatMS) this.props.setTempo(60000 / currentBeatMS);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SquareResponsiveDiv width=\"40%\">\r\n        <Button\r\n          onMouseDown={this.onTapTempoButtonMouseDown}\r\n          position=\"absolute\"\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          fontSize=\"2.5rem\"\r\n          border=\"5px solid\"\r\n          borderRadius=\"50%\"\r\n          scaleOnActive\r\n        >\r\n          tap\r\n        </Button>\r\n      </SquareResponsiveDiv>\r\n    );\r\n  }\r\n}\r\n\r\nTapTempoButton.propTypes = {\r\n  setTempo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TapTempoButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Div from '../elements/Div';\r\nimport Button from '../elements/Button';\r\nimport Form from '../elements/Form';\r\nimport Input from '../elements/Input';\r\nimport Icon from '../elements/Icon';\r\n\r\nclass TimeSigBeatsControls extends Component {\r\n  // blur (triggering input value update) after state has been updated\r\n  onTimeSigBeatsInputFormSubmit = async e => {\r\n    e.preventDefault();\r\n    await this.props.setTimeSigBeats(this.props.timeSigBeatsInput);\r\n    document.activeElement.blur();\r\n  };\r\n\r\n  // only allows 2 digits to be entered\r\n  onTimeSigBeatsInputChange = e =>\r\n    this.props.setTimeSigBeatsInput(\r\n      e.currentTarget.value.replace(/\\D/g, '').slice(0, 2)\r\n    );\r\n\r\n  onTimeSigBeatsInputFocus = () => this.props.setTimeSigBeatsInput('');\r\n\r\n  // if the input isn't already displaying the current timeSigBeats, update input\r\n  onTimeSigBeatsInputBlur = () =>\r\n    String(this.props.timeSigBeats) !== this.props.timeSigBeatsInput &&\r\n    this.props.setTimeSigBeatsInput(String(this.props.timeSigBeats));\r\n\r\n  onIncrementTimeSigBeatsButtonClick = e =>\r\n    this.props.incrementTimeSigBeats(e.currentTarget.value);\r\n\r\n  render() {\r\n    return (\r\n      <Div display=\"flex\" justifyContent=\"space-around\" alignItems=\"center\">\r\n        <Button\r\n          value={-1}\r\n          onClick={this.onIncrementTimeSigBeatsButtonClick}\r\n          border=\"none\"\r\n          scaleOnActive\r\n        >\r\n          <Icon className=\"material-icons\" fontSize=\"2.5rem\">\r\n            remove\r\n          </Icon>\r\n        </Button>\r\n\r\n        <Form onSubmit={this.onTimeSigBeatsInputFormSubmit} flex=\"1 1 0\">\r\n          <Input\r\n            ref={this.props.timeSigBeatsInputRef}\r\n            value={this.props.timeSigBeatsInput}\r\n            onChange={this.onTimeSigBeatsInputChange}\r\n            onFocus={this.onTimeSigBeatsInputFocus}\r\n            onBlur={this.onTimeSigBeatsInputBlur}\r\n            width=\"9.375rem\"\r\n            maxWidth=\"5rem\"\r\n            fontSize=\"3.75rem\"\r\n            border=\"none\"\r\n          />\r\n        </Form>\r\n\r\n        <Button\r\n          value={1}\r\n          onClick={this.onIncrementTimeSigBeatsButtonClick}\r\n          border=\"none\"\r\n          scaleOnActive\r\n        >\r\n          <Icon className=\"material-icons\" fontSize=\"2.5rem\">\r\n            add\r\n          </Icon>\r\n        </Button>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nTimeSigBeatsControls.propTypes = {\r\n  timeSigBeats: PropTypes.number.isRequired,\r\n  timeSigBeatsInput: PropTypes.string.isRequired,\r\n  setTimeSigBeats: PropTypes.func.isRequired,\r\n  setTimeSigBeatsInput: PropTypes.func.isRequired,\r\n  incrementTimeSigBeats: PropTypes.func.isRequired,\r\n  MIN_TIME_SIG_BEATS: PropTypes.number.isRequired,\r\n  MAX_TIME_SIG_BEATS: PropTypes.number.isRequired,\r\n  timeSigBeatsInputRef: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }).isRequired\r\n};\r\n\r\nexport default TimeSigBeatsControls;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Div from '../elements/Div';\r\nimport Button from '../elements/Button';\r\n\r\nconst TimeSigBeatNoteLengthButton = styled(Button)`\r\n${props => props.isSelected && 'transform: scale(1.125);'}\r\n  opacity: ${props => (props.isSelected ? '1' : '0.5')};\r\n  &:hover {\r\n    ${props => props.isSelected || 'opacity: 0.75;'}\r\n  }\r\n`;\r\n\r\nclass TimeSigBeatNoteLengthControls extends Component {\r\n  onTimeSigBeatNoteLengthButtonClick = e =>\r\n    this.props.setTimeSigBeatNoteLength(e.currentTarget.value);\r\n\r\n  render() {\r\n    const buttons = ['2', '4', '8', '16'].map(item => (\r\n      <TimeSigBeatNoteLengthButton\r\n        key={item}\r\n        value={item}\r\n        onClick={this.onTimeSigBeatNoteLengthButtonClick}\r\n        width=\"25%\"\r\n        fontSize=\"2.5rem\"\r\n        border=\"none\"\r\n        isSelected={this.props.timeSigBeatNoteLength === item}\r\n      >\r\n        {item}\r\n      </TimeSigBeatNoteLengthButton>\r\n    ));\r\n\r\n    return <Div>{buttons}</Div>;\r\n  }\r\n}\r\n\r\nTimeSigBeatNoteLengthControls.propTypes = {\r\n  timeSigBeatNoteLength: PropTypes.string.isRequired,\r\n  setTimeSigBeatNoteLength: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TimeSigBeatNoteLengthControls;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TimeSigBeatsControls from './TimeSigBeatsControls';\r\nimport TimeSigBeatNoteLengthControls from './TimeSigBeatNoteLengthControls';\r\nimport Div from '../elements/Div';\r\n\r\nclass TimeSigControls extends Component {\r\n  render() {\r\n    return (\r\n      <Div\r\n        width=\"40%\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        justifyContent=\"space-around\"\r\n      >\r\n        <TimeSigBeatsControls\r\n          timeSigBeats={this.props.timeSigBeats}\r\n          timeSigBeatsInput={this.props.timeSigBeatsInput}\r\n          setTimeSigBeats={this.props.setTimeSigBeats}\r\n          setTimeSigBeatsInput={this.props.setTimeSigBeatsInput}\r\n          incrementTimeSigBeats={this.props.incrementTimeSigBeats}\r\n          MIN_TIME_SIG_BEATS={this.props.MIN_TIME_SIG_BEATS}\r\n          MAX_TIME_SIG_BEATS={this.props.MAX_TIME_SIG_BEATS}\r\n          timeSigBeatsInputRef={this.props.timeSigBeatsInputRef}\r\n        />\r\n        <TimeSigBeatNoteLengthControls\r\n          timeSigBeatNoteLength={this.props.timeSigBeatNoteLength}\r\n          setTimeSigBeatNoteLength={this.props.setTimeSigBeatNoteLength}\r\n        />\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nTimeSigControls.propTypes = {\r\n  timeSigBeats: PropTypes.number.isRequired,\r\n  timeSigBeatNoteLength: PropTypes.string.isRequired,\r\n  timeSigBeatsInput: PropTypes.string.isRequired,\r\n  setTimeSigBeats: PropTypes.func.isRequired,\r\n  setTimeSigBeatsInput: PropTypes.func.isRequired,\r\n  incrementTimeSigBeats: PropTypes.func.isRequired,\r\n  setTimeSigBeatNoteLength: PropTypes.func.isRequired,\r\n  MIN_TIME_SIG_BEATS: PropTypes.number.isRequired,\r\n  MAX_TIME_SIG_BEATS: PropTypes.number.isRequired,\r\n  timeSigBeatsInputRef: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }).isRequired\r\n};\r\n\r\nexport default TimeSigControls;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Div from '../elements/Div';\r\nimport Input from '../elements/Input';\r\nimport Icon from '../elements/Icon';\r\n\r\nclass VolumeControl extends Component {\r\n  onVolumeInputChange = e =>\r\n    this.props.setVolume(Number(e.currentTarget.value));\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Div\r\n          width=\"100%\"\r\n          marginTop=\"5rem\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Icon className=\"material-icons\">volume_mute</Icon>\r\n          <Input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.1\"\r\n            value={this.props.volume}\r\n            onChange={this.onVolumeInputChange}\r\n            width=\"50%\"\r\n            margin=\"0 1.25rem\"\r\n          />\r\n          <Icon className=\"material-icons\">volume_up</Icon>\r\n        </Div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nVolumeControl.propTypes = {\r\n  volume: PropTypes.number.isRequired,\r\n  setVolume: PropTypes.func.isRequired\r\n};\r\n\r\nexport default VolumeControl;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../elements/Button';\r\nimport Icon from '../elements/Icon';\r\n\r\nclass AccentToggleButton extends Component {\r\n  onAccentToggleButtonClick = () => this.props.toggleAccent();\r\n\r\n  render() {\r\n    return (\r\n      <Button\r\n        onClick={this.onAccentToggleButtonClick}\r\n        marginTop=\"5rem\"\r\n        fontSize=\"2.5rem\"\r\n        lineHeight=\"1.5\"\r\n        border=\"none\"\r\n      >\r\n        accent\r\n        <br />\r\n        <Icon\r\n          className=\"material-icons\"\r\n          fontSize=\"3.75rem\"\r\n          opacity={this.props.accent ? '1' : '0.5'}\r\n        >\r\n          power_settings_new\r\n          {/* {this.props.accent\r\n            ? 'radio_button_checked'\r\n            : 'radio_button_unchecked'} */}\r\n        </Icon>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nAccentToggleButton.propTypes = {\r\n  accent: PropTypes.bool.isRequired,\r\n  toggleAccent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AccentToggleButton;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\n// ===== THEME\r\n\r\nexport const Theme = {\r\n  bg: 'hsl(0, 75%, 25%)',\r\n  fg: 'hsl(0, 25%, 90%)'\r\n};\r\n\r\n// ===== STYLES\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n\r\n  html {\r\n    background: ${Theme.bg};\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Saira', sans-serif;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  #root {\r\n    width: 90%;\r\n    min-width: 300px;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 640px) {\r\n    html {\r\n      font-size: 78.125%;\r\n    }\r\n  }\r\n`;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport Sound from './Sound';\r\nimport KeyboardShortcuts from './KeyboardShortcuts';\r\nimport KeyboardShortcutsLegend from './KeyboardShortcutsLegend';\r\nimport KeyboardShortcutsButton from './KeyboardShortcutsButton';\r\nimport Header from './Header';\r\nimport PlayStopButton from './PlayStopButton';\r\nimport TempoInputAndButtons from './TempoInputAndButtons';\r\nimport TempoSlider from './TempoSlider';\r\nimport TapTempoButton from './TapTempoButton';\r\nimport TimeSigControls from './TimeSigControls';\r\nimport VolumeControl from './VolumeControl';\r\nimport AccentToggleButton from './AccentToggleButton';\r\nimport Div from '../elements/Div';\r\nimport { Theme, GlobalStyles } from '../styles';\r\n\r\nconst MIN_TEMPO = 40;\r\nconst MAX_TEMPO = 280;\r\nconst MIN_TIME_SIG_BEATS = 1;\r\nconst MAX_TIME_SIG_BEATS = 99;\r\n\r\nconst legalTempoValue = num => num >= MIN_TEMPO && num <= MAX_TEMPO;\r\nconst legalTimeSigBeatsValue = num =>\r\n  num >= MIN_TIME_SIG_BEATS && num <= MAX_TIME_SIG_BEATS;\r\nconst legalVolumeValue = num => num >= 0 && num <= 1;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    playing: false,\r\n    tempo: 120,\r\n    tempoInput: '120',\r\n    volume: 1,\r\n    currentBeat: 0,\r\n    accent: false,\r\n    timeSigBeats: 4,\r\n    timeSigBeatsInput: '4',\r\n    timeSigBeatNoteLength: '4',\r\n    displayShortcuts: false\r\n  };\r\n\r\n  // ========== REFS\r\n\r\n  tempoInputRef = React.createRef();\r\n  timeSigBeatsInputRef = React.createRef();\r\n  tapTempoButtonRef = React.createRef(); // for the component, not the dom node\r\n\r\n  // ========== STATE MODIFICATION\r\n\r\n  // ===== PLAYBACK\r\n\r\n  // if playing is being toggled to false, reset currentBeat\r\n  togglePlaying = () =>\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      playing: !prevState.playing,\r\n      currentBeat: prevState.playing ? 0 : prevState.currentBeat\r\n    }));\r\n\r\n  // ===== TEMPO\r\n\r\n  setTempo = newTempo => {\r\n    newTempo = parseInt(newTempo);\r\n\r\n    // if the value isn't within the allowed range, use closest allowed value\r\n    if (newTempo < MIN_TEMPO) newTempo = MIN_TEMPO;\r\n    else if (newTempo > MAX_TEMPO) newTempo = MAX_TEMPO;\r\n\r\n    this.setState({ tempo: newTempo });\r\n  };\r\n\r\n  // only increment if the new tempo is within the allowed range\r\n  incrementTempo = incr => {\r\n    incr = parseInt(incr);\r\n\r\n    this.setState(prevState =>\r\n      // only update state if new value is within allowed range\r\n      legalTempoValue(prevState.tempo + incr)\r\n        ? {\r\n            ...prevState,\r\n            tempo: prevState.tempo + incr,\r\n            tempoInput: String(prevState.tempo + incr)\r\n          }\r\n        : null\r\n    );\r\n  };\r\n\r\n  setTempoInput = value => this.setState({ tempoInput: value });\r\n\r\n  // ===== BEAT\r\n\r\n  incrementCurrentBeat = () =>\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      currentBeat:\r\n        prevState.currentBeat < this.state.timeSigBeats - 1\r\n          ? prevState.currentBeat + 1\r\n          : 0\r\n    }));\r\n\r\n  // ===== ACCENT\r\n\r\n  toggleAccent = () =>\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      accent: !prevState.accent\r\n    }));\r\n\r\n  // ===== TIME SIG BEATS\r\n\r\n  setTimeSigBeats = newTimeSigBeats => {\r\n    newTimeSigBeats = parseInt(newTimeSigBeats);\r\n\r\n    // if the value isn't within the allowed range, use closest allowed value\r\n    if (newTimeSigBeats < MIN_TIME_SIG_BEATS)\r\n      newTimeSigBeats = MIN_TIME_SIG_BEATS;\r\n    else if (newTimeSigBeats > MAX_TIME_SIG_BEATS)\r\n      newTimeSigBeats = MAX_TIME_SIG_BEATS;\r\n\r\n    this.setState({ timeSigBeats: newTimeSigBeats });\r\n  };\r\n\r\n  incrementTimeSigBeats = incr => {\r\n    incr = parseInt(incr);\r\n\r\n    this.setState(prevState =>\r\n      // only update state if new value is within allowed range\r\n      legalTimeSigBeatsValue(prevState.timeSigBeats + incr)\r\n        ? {\r\n            ...prevState,\r\n            timeSigBeats: prevState.timeSigBeats + incr,\r\n            timeSigBeatsInput: String(prevState.timeSigBeats + incr)\r\n          }\r\n        : null\r\n    );\r\n  };\r\n\r\n  setTimeSigBeatsInput = value => this.setState({ timeSigBeatsInput: value });\r\n\r\n  // ===== TIME SIG BEAT NOTE LENGTH\r\n\r\n  setTimeSigBeatNoteLength = newTimeSigBeatNoteLength =>\r\n    this.setState({\r\n      timeSigBeatNoteLength: newTimeSigBeatNoteLength\r\n    });\r\n\r\n  // ===== VOLUME\r\n\r\n  setVolume = value => this.setState({ volume: value });\r\n\r\n  incrementVolume = incr =>\r\n    this.setState(prevState =>\r\n      // only update state if new value is within allowed range\r\n      legalVolumeValue(prevState.volume + incr)\r\n        ? {\r\n            ...prevState,\r\n            volume: Math.round((prevState.volume + incr) * 10) / 10\r\n          }\r\n        : null\r\n    );\r\n\r\n  // ===== SHORTCUTS\r\n\r\n  toggleDisplayShortcuts = () =>\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      displayShortcuts: !prevState.displayShortcuts\r\n    }));\r\n\r\n  // ========== RENDER\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={Theme}>\r\n        <Fragment>\r\n          <GlobalStyles />\r\n          <Sound\r\n            tempo={this.state.tempo}\r\n            playing={this.state.playing}\r\n            volume={this.state.volume}\r\n            currentBeat={this.state.currentBeat}\r\n            accent={this.state.accent}\r\n            timeSigBeats={this.state.timeSigBeats}\r\n            timeSigBeatNoteLength={this.state.timeSigBeatNoteLength}\r\n            incrementCurrentBeat={this.incrementCurrentBeat}\r\n          />\r\n\r\n          <KeyboardShortcuts\r\n            togglePlaying={this.togglePlaying}\r\n            incrementTempo={this.incrementTempo}\r\n            incrementVolume={this.incrementVolume}\r\n            toggleAccent={this.toggleAccent}\r\n            incrementTimeSigBeats={this.incrementTimeSigBeats}\r\n            tempoInputRef={this.tempoInputRef}\r\n            timeSigBeatsInputRef={this.timeSigBeatsInputRef}\r\n            tapTempoButtonRef={this.tapTempoButtonRef}\r\n          />\r\n\r\n          <KeyboardShortcutsLegend\r\n            displayShortcuts={this.state.displayShortcuts}\r\n            toggleDisplayShortcuts={this.toggleDisplayShortcuts}\r\n          />\r\n\r\n          <KeyboardShortcutsButton\r\n            displayShortcuts={this.state.displayShortcuts}\r\n            toggleDisplayShortcuts={this.toggleDisplayShortcuts}\r\n          />\r\n\r\n          <Div display=\"flex\" flexDirection=\"column\">\r\n            <Header />\r\n\r\n            <PlayStopButton\r\n              playing={this.state.playing}\r\n              togglePlaying={this.togglePlaying}\r\n            />\r\n\r\n            <TempoInputAndButtons\r\n              tempo={this.state.tempo}\r\n              tempoInput={this.state.tempoInput}\r\n              setTempo={this.setTempo}\r\n              setTempoInput={this.setTempoInput}\r\n              incrementTempo={this.incrementTempo}\r\n              MIN_TEMPO={MIN_TEMPO}\r\n              MAX_TEMPO={MAX_TEMPO}\r\n              tempoInputRef={this.tempoInputRef}\r\n            />\r\n\r\n            <TempoSlider\r\n              tempo={this.state.tempo}\r\n              setTempo={this.setTempo}\r\n              MIN_TEMPO={MIN_TEMPO}\r\n              MAX_TEMPO={MAX_TEMPO}\r\n            />\r\n\r\n            <Div\r\n              width=\"100%\"\r\n              marginTop=\"5rem\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <TapTempoButton\r\n                setTempo={this.setTempo}\r\n                ref={this.tapTempoButtonRef}\r\n              />\r\n\r\n              <Div // vertical rule\r\n                heigh=\"100%\"\r\n                width=\"5px\"\r\n                background=\"#ffffff\"\r\n                opacity=\"0.1\"\r\n              />\r\n\r\n              <TimeSigControls\r\n                timeSigBeats={this.state.timeSigBeats}\r\n                timeSigBeatNoteLength={this.state.timeSigBeatNoteLength}\r\n                timeSigBeatsInput={this.state.timeSigBeatsInput}\r\n                setTimeSigBeats={this.setTimeSigBeats}\r\n                setTimeSigBeatsInput={this.setTimeSigBeatsInput}\r\n                incrementTimeSigBeats={this.incrementTimeSigBeats}\r\n                setTimeSigBeatNoteLength={this.setTimeSigBeatNoteLength}\r\n                MIN_TIME_SIG_BEATS={MIN_TIME_SIG_BEATS}\r\n                MAX_TIME_SIG_BEATS={MAX_TIME_SIG_BEATS}\r\n                timeSigBeatsInputRef={this.timeSigBeatsInputRef}\r\n              />\r\n            </Div>\r\n\r\n            <VolumeControl\r\n              volume={this.state.volume}\r\n              setVolume={this.setVolume}\r\n            />\r\n\r\n            <AccentToggleButton\r\n              accent={this.state.accent}\r\n              toggleAccent={this.toggleAccent}\r\n            />\r\n          </Div>\r\n        </Fragment>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}